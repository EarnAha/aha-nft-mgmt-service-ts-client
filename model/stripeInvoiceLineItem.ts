/**
 * aha-nft-mgmt-service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { InvoiceLineItemDiscountAmount } from './invoiceLineItemDiscountAmount';
import { InvoiceLineItemPeriod } from './invoiceLineItemPeriod';
import { InvoiceLineItemTaxAmount } from './invoiceLineItemTaxAmount';
import { InvoiceLineItemType } from './invoiceLineItemType';
import { StripeInvoiceLineItemDiscountsInner } from './stripeInvoiceLineItemDiscountsInner';
import { StripeInvoiceLineItemPlan } from './stripeInvoiceLineItemPlan';
import { StripeInvoiceLineItemPrice } from './stripeInvoiceLineItemPrice';
import { StripeInvoiceLineItemProrationDetails } from './stripeInvoiceLineItemProrationDetails';
import { StripeTaxRate } from './stripeTaxRate';

/**
* The InvoiceLineItem object.
*/
export class StripeInvoiceLineItem {
    /**
    * Unique identifier for the object.
    */
    'id': string;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': StripeInvoiceLineItem.ObjectEnum;
    /**
    * The amount, in %s.
    */
    'amount': number;
    /**
    * The integer amount in %s representing the amount for this line item, excluding all tax and discounts.
    */
    'amountExcludingTax': number | null;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency': string;
    /**
    * An arbitrary string attached to the object. Often useful for displaying to users.
    */
    'description': string | null;
    /**
    * The amount of discount calculated per discount for this line item.
    */
    'discountAmounts': Array<InvoiceLineItemDiscountAmount> | null;
    /**
    * If true, discounts will apply to this line item. Always false for prorations.
    */
    'discountable': boolean;
    /**
    * The discounts applied to the invoice line item. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.
    */
    'discounts': Array<StripeInvoiceLineItemDiscountsInner> | null;
    /**
    * The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems) associated with this line item if any.
    */
    'invoiceItem'?: string;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    */
    'metadata': { [key: string]: string; };
    'period': InvoiceLineItemPeriod;
    'plan': StripeInvoiceLineItemPlan | null;
    'price': StripeInvoiceLineItemPrice | null;
    /**
    * Whether this is a proration.
    */
    'proration': boolean;
    'prorationDetails': StripeInvoiceLineItemProrationDetails | null;
    /**
    * The quantity of the subscription, if the line item is a subscription or a proration.
    */
    'quantity': number | null;
    /**
    * The subscription that the invoice item pertains to, if any.
    */
    'subscription': string | null;
    /**
    * The subscription item that generated this invoice item. Left empty if the line item is not an explicit result of a subscription.
    */
    'subscriptionItem'?: string;
    /**
    * The amount of tax calculated per tax rate for this line item
    */
    'taxAmounts'?: Array<InvoiceLineItemTaxAmount>;
    /**
    * The tax rates which apply to the line item.
    */
    'taxRates'?: Array<StripeTaxRate>;
    'type': InvoiceLineItemType;
    /**
    * The amount in %s representing the unit amount for this line item, excluding all tax and discounts.
    */
    'unitAmountExcludingTax': string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "StripeInvoiceLineItem.ObjectEnum"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "amountExcludingTax",
            "baseName": "amount_excluding_tax",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "discountAmounts",
            "baseName": "discount_amounts",
            "type": "Array<InvoiceLineItemDiscountAmount>"
        },
        {
            "name": "discountable",
            "baseName": "discountable",
            "type": "boolean"
        },
        {
            "name": "discounts",
            "baseName": "discounts",
            "type": "Array<StripeInvoiceLineItemDiscountsInner>"
        },
        {
            "name": "invoiceItem",
            "baseName": "invoice_item",
            "type": "string"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "period",
            "baseName": "period",
            "type": "InvoiceLineItemPeriod"
        },
        {
            "name": "plan",
            "baseName": "plan",
            "type": "StripeInvoiceLineItemPlan"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "StripeInvoiceLineItemPrice"
        },
        {
            "name": "proration",
            "baseName": "proration",
            "type": "boolean"
        },
        {
            "name": "prorationDetails",
            "baseName": "proration_details",
            "type": "StripeInvoiceLineItemProrationDetails"
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number"
        },
        {
            "name": "subscription",
            "baseName": "subscription",
            "type": "string"
        },
        {
            "name": "subscriptionItem",
            "baseName": "subscription_item",
            "type": "string"
        },
        {
            "name": "taxAmounts",
            "baseName": "tax_amounts",
            "type": "Array<InvoiceLineItemTaxAmount>"
        },
        {
            "name": "taxRates",
            "baseName": "tax_rates",
            "type": "Array<StripeTaxRate>"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "InvoiceLineItemType"
        },
        {
            "name": "unitAmountExcludingTax",
            "baseName": "unit_amount_excluding_tax",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return StripeInvoiceLineItem.attributeTypeMap;
    }
}

export namespace StripeInvoiceLineItem {
    export enum ObjectEnum {
        LINE_ITEM = <any> 'line_item'
    }
}
