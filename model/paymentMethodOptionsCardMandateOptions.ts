/**
 * aha-nft-mgmt-service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { MandateOptionsAmountType } from './mandateOptionsAmountType';
import { MandateOptionsInterval } from './mandateOptionsInterval';

/**
* Configuration options for setting up an eMandate for cards issued in India.
*/
export class PaymentMethodOptionsCardMandateOptions {
    /**
    * Amount to be charged for future payments.
    */
    'amount': number;
    'amountType': MandateOptionsAmountType;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency': string;
    /**
    * A description of the mandate or subscription that is meant to be displayed to the customer.
    */
    'description': string | null;
    /**
    * End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.
    */
    'endDate': number | null;
    'interval': MandateOptionsInterval;
    /**
    * The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.
    */
    'intervalCount': number | null;
    /**
    * Unique identifier for the mandate or subscription.
    */
    'reference': string;
    /**
    * Start date of the mandate or subscription. Start date should not be lesser than yesterday.
    */
    'startDate': number;
    /**
    * Specifies the type of mandates supported. Possible values are `india`.
    */
    'supportedTypes': Array<PaymentMethodOptionsCardMandateOptions.SupportedTypesEnum>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "amountType",
            "baseName": "amount_type",
            "type": "MandateOptionsAmountType"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "endDate",
            "baseName": "end_date",
            "type": "number"
        },
        {
            "name": "interval",
            "baseName": "interval",
            "type": "MandateOptionsInterval"
        },
        {
            "name": "intervalCount",
            "baseName": "interval_count",
            "type": "number"
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string"
        },
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "number"
        },
        {
            "name": "supportedTypes",
            "baseName": "supported_types",
            "type": "Array<PaymentMethodOptionsCardMandateOptions.SupportedTypesEnum>"
        }    ];

    static getAttributeTypeMap() {
        return PaymentMethodOptionsCardMandateOptions.attributeTypeMap;
    }
}

export namespace PaymentMethodOptionsCardMandateOptions {
    export enum SupportedTypesEnum {
        INDIA = <any> 'india'
    }
}
