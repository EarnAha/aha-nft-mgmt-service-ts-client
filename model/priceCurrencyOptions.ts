/**
 * aha-nft-mgmt-service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CurrencyOptionsTaxBehavior } from './currencyOptionsTaxBehavior';
import { CurrencyOptionsTier } from './currencyOptionsTier';
import { PriceCurrencyOptionsCustomUnitAmount } from './priceCurrencyOptionsCustomUnitAmount';

export class PriceCurrencyOptions {
    'customUnitAmount': PriceCurrencyOptionsCustomUnitAmount | null;
    /**
    * Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    */
    'taxBehavior': CurrencyOptionsTaxBehavior | null;
    /**
    * Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    */
    'tiers'?: Array<CurrencyOptionsTier>;
    /**
    * The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
    */
    'unitAmount': number | null;
    /**
    * The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.
    */
    'unitAmountDecimal': string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "customUnitAmount",
            "baseName": "custom_unit_amount",
            "type": "PriceCurrencyOptionsCustomUnitAmount"
        },
        {
            "name": "taxBehavior",
            "baseName": "tax_behavior",
            "type": "CurrencyOptionsTaxBehavior"
        },
        {
            "name": "tiers",
            "baseName": "tiers",
            "type": "Array<CurrencyOptionsTier>"
        },
        {
            "name": "unitAmount",
            "baseName": "unit_amount",
            "type": "number"
        },
        {
            "name": "unitAmountDecimal",
            "baseName": "unit_amount_decimal",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return PriceCurrencyOptions.attributeTypeMap;
    }
}

