/**
 * aha-nft-mgmt-service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { RecurringAggregateUsage } from './recurringAggregateUsage';
import { RecurringInterval } from './recurringInterval';
import { RecurringUsageType } from './recurringUsageType';

export class PriceRecurring {
    /**
    * Specifies a usage aggregation strategy for prices of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.
    */
    'aggregateUsage': RecurringAggregateUsage | null;
    'interval': RecurringInterval;
    /**
    * The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.
    */
    'intervalCount': number;
    /**
    * Default number of trial days when subscribing a customer to this price using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
    */
    'trialPeriodDays': number | null;
    'usageType': RecurringUsageType;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "aggregateUsage",
            "baseName": "aggregate_usage",
            "type": "RecurringAggregateUsage"
        },
        {
            "name": "interval",
            "baseName": "interval",
            "type": "RecurringInterval"
        },
        {
            "name": "intervalCount",
            "baseName": "interval_count",
            "type": "number"
        },
        {
            "name": "trialPeriodDays",
            "baseName": "trial_period_days",
            "type": "number"
        },
        {
            "name": "usageType",
            "baseName": "usage_type",
            "type": "RecurringUsageType"
        }    ];

    static getAttributeTypeMap() {
        return PriceRecurring.attributeTypeMap;
    }
}

export namespace PriceRecurring {
}
