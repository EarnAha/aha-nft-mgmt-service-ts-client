/**
 * aha-nft-mgmt-service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CardCancellationReason } from './cardCancellationReason';
import { CardReplacementReason } from './cardReplacementReason';
import { CardSpendingControls } from './cardSpendingControls';
import { CardStatus } from './cardStatus';
import { CardType } from './cardType';
import { StripeIssuingCardReplacedBy } from './stripeIssuingCardReplacedBy';
import { StripeIssuingCardReplacementFor } from './stripeIssuingCardReplacementFor';
import { StripeIssuingCardShipping } from './stripeIssuingCardShipping';
import { StripeIssuingCardWallets } from './stripeIssuingCardWallets';
import { StripeIssuingCardholder } from './stripeIssuingCardholder';

/**
* You can [create physical or virtual cards](https://stripe.com/docs/issuing/cards) that are issued to cardholders.
*/
export class StripeIssuingCard {
    /**
    * Unique identifier for the object.
    */
    'id': string;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': StripeIssuingCard.ObjectEnum;
    /**
    * The brand of the card.
    */
    'brand': string;
    /**
    * The reason why the card was canceled.
    */
    'cancellationReason': CardCancellationReason | null;
    'cardholder': StripeIssuingCardholder;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    */
    'created': number;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Supported currencies are `usd` in the US, `eur` in the EU, and `gbp` in the UK.
    */
    'currency': string;
    /**
    * The card\'s CVC. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it\'s only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.
    */
    'cvc'?: string;
    /**
    * The expiration month of the card.
    */
    'expMonth': number;
    /**
    * The expiration year of the card.
    */
    'expYear': number;
    /**
    * The financial account this card is attached to.
    */
    'financialAccount'?: string | null;
    /**
    * The last 4 digits of the card number.
    */
    'last4': string;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    */
    'metadata': { [key: string]: string; };
    /**
    * The full unredacted card number. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it\'s only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.
    */
    'number'?: string;
    'replacedBy': StripeIssuingCardReplacedBy | null;
    'replacementFor': StripeIssuingCardReplacementFor | null;
    /**
    * The reason why the previous card needed to be replaced.
    */
    'replacementReason': CardReplacementReason | null;
    'shipping': StripeIssuingCardShipping | null;
    'spendingControls': CardSpendingControls;
    'status': CardStatus;
    'type': CardType;
    'wallets': StripeIssuingCardWallets | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "StripeIssuingCard.ObjectEnum"
        },
        {
            "name": "brand",
            "baseName": "brand",
            "type": "string"
        },
        {
            "name": "cancellationReason",
            "baseName": "cancellation_reason",
            "type": "CardCancellationReason"
        },
        {
            "name": "cardholder",
            "baseName": "cardholder",
            "type": "StripeIssuingCardholder"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "cvc",
            "baseName": "cvc",
            "type": "string"
        },
        {
            "name": "expMonth",
            "baseName": "exp_month",
            "type": "number"
        },
        {
            "name": "expYear",
            "baseName": "exp_year",
            "type": "number"
        },
        {
            "name": "financialAccount",
            "baseName": "financial_account",
            "type": "string"
        },
        {
            "name": "last4",
            "baseName": "last4",
            "type": "string"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "number",
            "baseName": "number",
            "type": "string"
        },
        {
            "name": "replacedBy",
            "baseName": "replaced_by",
            "type": "StripeIssuingCardReplacedBy"
        },
        {
            "name": "replacementFor",
            "baseName": "replacement_for",
            "type": "StripeIssuingCardReplacementFor"
        },
        {
            "name": "replacementReason",
            "baseName": "replacement_reason",
            "type": "CardReplacementReason"
        },
        {
            "name": "shipping",
            "baseName": "shipping",
            "type": "StripeIssuingCardShipping"
        },
        {
            "name": "spendingControls",
            "baseName": "spending_controls",
            "type": "CardSpendingControls"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "CardStatus"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "CardType"
        },
        {
            "name": "wallets",
            "baseName": "wallets",
            "type": "StripeIssuingCardWallets"
        }    ];

    static getAttributeTypeMap() {
        return StripeIssuingCard.attributeTypeMap;
    }
}

export namespace StripeIssuingCard {
    export enum ObjectEnum {
        ISSUING_CARD = <any> 'issuing.card'
    }
}
