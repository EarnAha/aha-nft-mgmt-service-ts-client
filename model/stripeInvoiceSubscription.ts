/**
 * aha-nft-mgmt-service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ApiListStripeSubscriptionItem } from './apiListStripeSubscriptionItem';
import { StripeSubscription } from './stripeSubscription';
import { StripeSubscriptionApplication } from './stripeSubscriptionApplication';
import { StripeSubscriptionBillingThresholds } from './stripeSubscriptionBillingThresholds';
import { StripeSubscriptionCustomer } from './stripeSubscriptionCustomer';
import { StripeSubscriptionDefaultPaymentMethod } from './stripeSubscriptionDefaultPaymentMethod';
import { StripeSubscriptionDefaultSource } from './stripeSubscriptionDefaultSource';
import { StripeSubscriptionDiscount } from './stripeSubscriptionDiscount';
import { StripeSubscriptionLatestInvoice } from './stripeSubscriptionLatestInvoice';
import { StripeSubscriptionOnBehalfOf } from './stripeSubscriptionOnBehalfOf';
import { StripeSubscriptionPauseCollection } from './stripeSubscriptionPauseCollection';
import { StripeSubscriptionPaymentSettings } from './stripeSubscriptionPaymentSettings';
import { StripeSubscriptionPendingInvoiceItemInterval } from './stripeSubscriptionPendingInvoiceItemInterval';
import { StripeSubscriptionPendingSetupIntent } from './stripeSubscriptionPendingSetupIntent';
import { StripeSubscriptionPendingUpdate } from './stripeSubscriptionPendingUpdate';
import { StripeSubscriptionSchedule } from './stripeSubscriptionSchedule';
import { StripeSubscriptionTestClock } from './stripeSubscriptionTestClock';
import { StripeSubscriptionTransferData } from './stripeSubscriptionTransferData';
import { StripeTaxRate } from './stripeTaxRate';
import { SubscriptionAutomaticTax } from './subscriptionAutomaticTax';
import { SubscriptionCollectionMethod } from './subscriptionCollectionMethod';
import { SubscriptionStatus } from './subscriptionStatus';

/**
* The subscription that this invoice was prepared for, if any.
*/
export class StripeInvoiceSubscription {
    /**
    * Unique identifier for the object.
    */
    'id': string;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': StripeInvoiceSubscription.ObjectEnum;
    'application': StripeSubscriptionApplication | null;
    /**
    * A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner\'s Stripe account.
    */
    'applicationFeePercent': number | null;
    'automaticTax': SubscriptionAutomaticTax;
    /**
    * Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.
    */
    'billingCycleAnchor': number;
    'billingThresholds': StripeSubscriptionBillingThresholds | null;
    /**
    * A date in the future at which the subscription will automatically get canceled
    */
    'cancelAt': number | null;
    /**
    * If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.
    */
    'cancelAtPeriodEnd': boolean;
    /**
    * If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.
    */
    'canceledAt': number | null;
    'collectionMethod': SubscriptionCollectionMethod;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    */
    'created': number;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency': string;
    /**
    * End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.
    */
    'currentPeriodEnd': number;
    /**
    * Start of the current period that the subscription has been invoiced for.
    */
    'currentPeriodStart': number;
    'customer': StripeSubscriptionCustomer;
    /**
    * Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.
    */
    'daysUntilDue': number | null;
    'defaultPaymentMethod': StripeSubscriptionDefaultPaymentMethod | null;
    'defaultSource': StripeSubscriptionDefaultSource | null;
    /**
    * The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.
    */
    'defaultTaxRates'?: Array<StripeTaxRate> | null;
    /**
    * The subscription\'s description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.
    */
    'description': string | null;
    'discount': StripeSubscriptionDiscount | null;
    /**
    * If the subscription has ended, the date the subscription ended.
    */
    'endedAt': number | null;
    'items': ApiListStripeSubscriptionItem;
    'latestInvoice': StripeSubscriptionLatestInvoice | null;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    */
    'metadata': { [key: string]: string; };
    /**
    * Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.
    */
    'nextPendingInvoiceItemInvoice': number | null;
    'onBehalfOf': StripeSubscriptionOnBehalfOf | null;
    'pauseCollection': StripeSubscriptionPauseCollection | null;
    'paymentSettings': StripeSubscriptionPaymentSettings | null;
    'pendingInvoiceItemInterval': StripeSubscriptionPendingInvoiceItemInterval | null;
    'pendingSetupIntent': StripeSubscriptionPendingSetupIntent | null;
    'pendingUpdate': StripeSubscriptionPendingUpdate | null;
    'schedule': StripeSubscriptionSchedule | null;
    /**
    * Date when the subscription was first created. The date might differ from the `created` date due to backdating.
    */
    'startDate': number;
    'status': SubscriptionStatus;
    'testClock': StripeSubscriptionTestClock | null;
    'transferData': StripeSubscriptionTransferData | null;
    /**
    * If the subscription has a trial, the end of that trial.
    */
    'trialEnd': number | null;
    /**
    * If the subscription has a trial, the beginning of that trial.
    */
    'trialStart': number | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "StripeInvoiceSubscription.ObjectEnum"
        },
        {
            "name": "application",
            "baseName": "application",
            "type": "StripeSubscriptionApplication"
        },
        {
            "name": "applicationFeePercent",
            "baseName": "application_fee_percent",
            "type": "number"
        },
        {
            "name": "automaticTax",
            "baseName": "automatic_tax",
            "type": "SubscriptionAutomaticTax"
        },
        {
            "name": "billingCycleAnchor",
            "baseName": "billing_cycle_anchor",
            "type": "number"
        },
        {
            "name": "billingThresholds",
            "baseName": "billing_thresholds",
            "type": "StripeSubscriptionBillingThresholds"
        },
        {
            "name": "cancelAt",
            "baseName": "cancel_at",
            "type": "number"
        },
        {
            "name": "cancelAtPeriodEnd",
            "baseName": "cancel_at_period_end",
            "type": "boolean"
        },
        {
            "name": "canceledAt",
            "baseName": "canceled_at",
            "type": "number"
        },
        {
            "name": "collectionMethod",
            "baseName": "collection_method",
            "type": "SubscriptionCollectionMethod"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "currentPeriodEnd",
            "baseName": "current_period_end",
            "type": "number"
        },
        {
            "name": "currentPeriodStart",
            "baseName": "current_period_start",
            "type": "number"
        },
        {
            "name": "customer",
            "baseName": "customer",
            "type": "StripeSubscriptionCustomer"
        },
        {
            "name": "daysUntilDue",
            "baseName": "days_until_due",
            "type": "number"
        },
        {
            "name": "defaultPaymentMethod",
            "baseName": "default_payment_method",
            "type": "StripeSubscriptionDefaultPaymentMethod"
        },
        {
            "name": "defaultSource",
            "baseName": "default_source",
            "type": "StripeSubscriptionDefaultSource"
        },
        {
            "name": "defaultTaxRates",
            "baseName": "default_tax_rates",
            "type": "Array<StripeTaxRate>"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "discount",
            "baseName": "discount",
            "type": "StripeSubscriptionDiscount"
        },
        {
            "name": "endedAt",
            "baseName": "ended_at",
            "type": "number"
        },
        {
            "name": "items",
            "baseName": "items",
            "type": "ApiListStripeSubscriptionItem"
        },
        {
            "name": "latestInvoice",
            "baseName": "latest_invoice",
            "type": "StripeSubscriptionLatestInvoice"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "nextPendingInvoiceItemInvoice",
            "baseName": "next_pending_invoice_item_invoice",
            "type": "number"
        },
        {
            "name": "onBehalfOf",
            "baseName": "on_behalf_of",
            "type": "StripeSubscriptionOnBehalfOf"
        },
        {
            "name": "pauseCollection",
            "baseName": "pause_collection",
            "type": "StripeSubscriptionPauseCollection"
        },
        {
            "name": "paymentSettings",
            "baseName": "payment_settings",
            "type": "StripeSubscriptionPaymentSettings"
        },
        {
            "name": "pendingInvoiceItemInterval",
            "baseName": "pending_invoice_item_interval",
            "type": "StripeSubscriptionPendingInvoiceItemInterval"
        },
        {
            "name": "pendingSetupIntent",
            "baseName": "pending_setup_intent",
            "type": "StripeSubscriptionPendingSetupIntent"
        },
        {
            "name": "pendingUpdate",
            "baseName": "pending_update",
            "type": "StripeSubscriptionPendingUpdate"
        },
        {
            "name": "schedule",
            "baseName": "schedule",
            "type": "StripeSubscriptionSchedule"
        },
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "number"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "SubscriptionStatus"
        },
        {
            "name": "testClock",
            "baseName": "test_clock",
            "type": "StripeSubscriptionTestClock"
        },
        {
            "name": "transferData",
            "baseName": "transfer_data",
            "type": "StripeSubscriptionTransferData"
        },
        {
            "name": "trialEnd",
            "baseName": "trial_end",
            "type": "number"
        },
        {
            "name": "trialStart",
            "baseName": "trial_start",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return StripeInvoiceSubscription.attributeTypeMap;
    }
}

export namespace StripeInvoiceSubscription {
    export enum ObjectEnum {
        SUBSCRIPTION = <any> 'subscription'
    }
}
