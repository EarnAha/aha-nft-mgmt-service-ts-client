/**
 * aha-nft-mgmt-service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CardholderBilling } from './cardholderBilling';
import { CardholderRequirements } from './cardholderRequirements';
import { CardholderStatus } from './cardholderStatus';
import { CardholderType } from './cardholderType';
import { StripeIssuingCardholder } from './stripeIssuingCardholder';
import { StripeIssuingCardholderCompany } from './stripeIssuingCardholderCompany';
import { StripeIssuingCardholderIndividual } from './stripeIssuingCardholderIndividual';
import { StripeIssuingCardholderSpendingControls } from './stripeIssuingCardholderSpendingControls';

/**
* The cardholder to whom this transaction belongs.
*/
export class StripeIssuingTransactionCardholder {
    /**
    * Unique identifier for the object.
    */
    'id': string;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': StripeIssuingTransactionCardholder.ObjectEnum;
    'billing': CardholderBilling;
    'company': StripeIssuingCardholderCompany | null;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    */
    'created': number;
    /**
    * The cardholder\'s email address.
    */
    'email': string | null;
    'individual': StripeIssuingCardholderIndividual | null;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    */
    'metadata': { [key: string]: string; };
    /**
    * The cardholder\'s name. This will be printed on cards issued to them.
    */
    'name': string;
    /**
    * The cardholder\'s phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.
    */
    'phoneNumber': string | null;
    'requirements': CardholderRequirements;
    'spendingControls': StripeIssuingCardholderSpendingControls | null;
    'status': CardholderStatus;
    'type': CardholderType;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "StripeIssuingTransactionCardholder.ObjectEnum"
        },
        {
            "name": "billing",
            "baseName": "billing",
            "type": "CardholderBilling"
        },
        {
            "name": "company",
            "baseName": "company",
            "type": "StripeIssuingCardholderCompany"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "individual",
            "baseName": "individual",
            "type": "StripeIssuingCardholderIndividual"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "phoneNumber",
            "baseName": "phone_number",
            "type": "string"
        },
        {
            "name": "requirements",
            "baseName": "requirements",
            "type": "CardholderRequirements"
        },
        {
            "name": "spendingControls",
            "baseName": "spending_controls",
            "type": "StripeIssuingCardholderSpendingControls"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "CardholderStatus"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "CardholderType"
        }    ];

    static getAttributeTypeMap() {
        return StripeIssuingTransactionCardholder.attributeTypeMap;
    }
}

export namespace StripeIssuingTransactionCardholder {
    export enum ObjectEnum {
        ISSUING_CARDHOLDER = <any> 'issuing.cardholder'
    }
}
